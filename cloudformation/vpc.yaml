AWSTemplateFormatVersion: 2010-09-09
Description: 
  Create a VPC with an internet gateway and public IP enabled.
  When deleting this stack, remember to delete the associated S3 bucket.

Parameters:

  NetworkCIDR:
    Description: CIDR of the new VPC
    Type: String
    Default: 10.0.0.0/16
    
  SubnetCIDR:
    Description: CIDR of the new subnet within this VPC
    Type: String
    Default: 10.0.1.0/24 
    
Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref NetworkCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
       - Key: Name
         Value: example-vpc
       - Key: Application
         Value: !Ref AWS::StackName
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
       - Key: Name
         Value: example-internet-gateway
       - Key: Application
         Value: !Ref AWS::StackName           
  
  VPCToGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
       - Key: Name
         Value: example-route-table
       - Key: Application
         Value: !Ref AWS::StackName
  
  Routes:
    Type: AWS::EC2::Route    
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway      
  
  PublicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: example-nacl
        - Key: Application
          Value: !Ref AWS::StackName        
          
  NaclRulesForInboundTCP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 100
      Protocol: '6'  # tcp
      RuleAction: allow
      Egress: false  
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
          
  NaclRulesForOutboundTCP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 100
      Protocol: 6  # tcp
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0  
        To: 65535
                
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref SubnetCIDR
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: Name
        Value: example-public-subnet
      - Key: Application
        Value: !Ref AWS::StackName
  
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable
      
  mySubnetNaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      NetworkAclId: !Ref PublicNACL

Outputs:
  VpcID:
    Description: ID of the newly created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
    
  PublicSubnetID:
    Description: SubnetId of the public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-SUBNET"
